    server {
        listen                               80;
        listen                               [::]:80;
        listen                               443 ssl;
        listen                               [::]:443 ssl;
        server_name                          example.com;

        # SSL
        ssl_certificate         /etc/letsencrypt/live/test-name/fullchain.pem;
        ssl_certificate_key     /etc/letsencrypt/live/test-name/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/test-name/chain.pem;

        # security headers
        add_header X-Frame-Options           "SAMEORIGIN" always;
        add_header X-XSS-Protection          "1; mode=block" always;
        add_header X-Content-Type-Options    "nosniff" always;
        add_header Referrer-Policy           "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy   "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
        add_header Permissions-Policy        "interest-cohort=()" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # . files
        location ~ /\.(?!well-known) {
            deny all;
        }

        # restrict methods
        if ($request_method !~ ^(GET|POST)$) {
            return '405';
        }

        # logging
        access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
        error_log  /var/log/nginx/error.log warn;

        # reverse proxy
        location / {
            proxy_pass                         http://nestjs:3000;
            proxy_set_header Host              $host;
            proxy_http_version                 1.1;

            # Proxy SSL
            proxy_ssl_server_name              on;

            # Proxy timeouts
            proxy_connect_timeout              60s;
            proxy_send_timeout                 60s;
            proxy_read_timeout                 60s;
        }

        # favicon.ico
        location = /favicon.ico {
            log_not_found off;
        }

        # robots.txt
        location = /robots.txt {
            log_not_found off;
        }

        # ACME-challenge
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
    }
